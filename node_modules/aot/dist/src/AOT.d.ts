/**用于将一些函数在运行的过程中，跳过一些固有的等待条件，使得运行更快*/
export declare class AOT {
    id: string;
    constructor(id?: string, default_condition?: boolean);
    autoRegister(target: any): void;
    private _getPropDescriptor;
    register(target: any, name: string, declaration: (target: any, name: string, des: PropertyDescriptor) => PropertyDescriptor): void;
    /**JIT运行时的条件属性*/
    condition: boolean;
    /**是否进行静态链接*/
    compile_into: boolean;
    /**条件语句*/
    Then(then_fun_name: string): (target: any, name: string, des: PropertyDescriptor) => PropertyDescriptor;
    /**前置条件*/
    Wait(condition_promise_fun_name: string, skip_if_false?: boolean): (target: any, name: string, des: PropertyDescriptor) => PropertyDescriptor;
    compile(condition: boolean): boolean;
}
